global:
  nameOverride:
  fullnameOverride:
  imagePullSecrets: []
  oidc:
    enabled: true
  web:
    enabled: true

web:
  # web project image
  image:
    repository:
    pullPolicy: IfNotPresent
    tag:

  service:
    type: NodePort
    externalPort: 30987

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: fireboom.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  servicemesh:
    enabled: false

fireboom:
  # Pod replica count
  replicaCount: 1

  image:
    data:
      # where to pull the fireboom app data
      repository:
      tag: "latest"
      pullPolicy: IfNotPresent
    fireboom:
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "v2.0.10"
    hook:
      repository:
      tag: "latest"
      pullPolicy: IfNotPresent

  service:
    type: NodePort
    externalUrl: 'http://localhost:9991'
    # fbPort: 30988

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: fireboom.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []

  # customInitContainers:
  #   - name: update-db
  #     image: 'fireboomapi/jq:alpine-3.19'
  #     command:
  #       - sh
  #       - '-c'
  #     args:
  #       - |
  #         jq '.kind = 3' /app/store/datasource/admin.json > temp.json
  #         mv temp.json /app/store/datasource/admin.json
  #     ports:
  #       - name: http-0
  #         containerPort: 1
  #         protocol: TCP
  #     resources: {}
  #     volumeMounts:
  #       - name: share-app
  #         mountPath: /app
  #     terminationMessagePath: /dev/termination-log
  #     terminationMessagePolicy: File
  #     imagePullPolicy: IfNotPresent

  resources:
    fireboom: {}
    hook: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  servicemesh:
    enabled: true

  # if you need add your custom env, you can uncomment the following line and add your env
  # customEnv:
  #   DB_ADMIN: "postgres://postgres:postgres@postgres:5432/amis-admin"

oidc:
  # Pod replica count
  replicaCount: 1

  # Database of oidc
  database:
    url: 'postgresql://postgres:postgres@postgres:5432/oidc'

  image:
    repository: fireboomapi/yudai
    pullPolicy: IfNotPresent
    tag: master

  service:
    type: ClusterIP

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  servicemesh:
    enabled: false