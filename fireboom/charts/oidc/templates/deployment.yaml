apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fireboom.fullname" . }}
  labels:
    {{- include "fireboom.labels" . | nindent 4 }}
  annotations:
    {{- include "fireboom.annotations" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fireboom.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.servicemesh.enabled }}
        sidecar.istio.io/inject: 'true'
        {{- end }}
      labels:
        {{- include "fireboom.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "fireboom.templateSpec" . | nindent 6 }}
      volumes:
        - name: cert-volume
          configMap:
            name: {{ include "fireboom.fullname" . }}-cfgmap
            items:
              - key: token_jwt_key.key
                path: token_jwt_key.key
              - key: token_jwt_key.pem
                path: token_jwt_key.pem
            defaultMode: 420
        - name: config
          configMap:
            name: {{ include "fireboom.fullname" . }}-cfgmap
            items:
              - key: config.yaml
                path: config.yaml

      containers:
        - name: {{ include "fireboom.name" . }}
          image: "{{ .Values.image.repository | default "fireboomapi/yudai" }}:{{ .Values.image.tag | default "master" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http-9825
              containerPort: 9825
              protocol: TCP
          env:
            - name: YUDAI_DB_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "fireboom.fullname" . }}-cfgmap
                  key: YUDAI_DB_URL
          volumeMounts:
            - name: cert-volume
              readOnly: true
              mountPath: /yudai/cert
            - name: config
              readOnly: true
              mountPath: /yudai/conf
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: 9825
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 9825
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
